{"version":3,"file":"static/js/278.2b35ac52.chunk.js","mappings":"0IA4EA,UA1Ee,WACX,IAAI,GAAgBA,EAAAA,EAAAA,UAAS,iBAA7B,eAAKC,EAAL,KAAUC,EAAV,KACI,GAAYF,EAAAA,EAAAA,UAAS,GAAzB,eAAKG,EAAL,KAAQC,EAAR,KACI,GAAkBJ,EAAAA,EAAAA,WAAS,GAA/B,eAAKK,EAAL,KAAWC,EAAX,KACI,GAAoBN,EAAAA,EAAAA,UAAS,GAAjC,eAAKO,EAAL,KAAYC,EAAZ,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAWC,aAAY,WACzBP,EAAKD,GAAK,GACF,KAALA,IACCA,EAAI,EACJS,cAAcF,GACdJ,GAAQ,GAEf,GAAE,IACH,OAAO,kBAAMM,cAAcF,EAApB,CACV,GAAE,IA+CH,OACI,iBAAKG,UAAU,SAAf,WACI,gBAAKC,IAAG,UAAKb,GAAL,OAAWE,EAAX,QAAoBY,IAAI,UAC/BV,GAAK,oBAAQW,KAAK,SAASH,UAAU,QAAQI,QA/CzC,WAGT,GAFAd,EAAE,EACFK,EAASD,GAAO,GACN,GAAPA,EAAS,CACR,IAAMW,EAAYP,aAAY,WAC1BT,EAAO,iBACPI,GAAQ,GACRF,EAAKD,GAAK,GACF,KAALA,IACCA,EAAI,EACJS,cAAcM,GACdZ,GAAQ,GAEf,GAAE,IACH,OAAO,kBAAMM,cAAcM,EAApB,CACV,CACD,GAAU,GAAPX,EAAS,CACR,IAAMY,EAAYR,aAAY,WAC1BT,EAAO,iBACPI,GAAQ,GACRF,EAAKD,GAAK,GACF,KAALA,IACCA,EAAI,EACJS,cAAcO,GACdb,GAAQ,GAEf,GAAE,IACH,OAAO,kBAAMM,cAAcO,EAApB,CACV,CACD,GAAU,GAAPZ,EAAS,CACR,IAAMa,EAAYT,aAAY,WAC1BT,EAAO,uBACPI,GAAQ,GACRF,EAAKD,GAAK,GACF,KAALA,IACCA,EAAI,EACJS,cAAcQ,GAGrB,GAAE,IACH,OAAO,kBAAMR,cAAcQ,EAApB,CACV,CACJ,EAKa,kBACIb,GACN,iBAAMc,GAAG,cACH,OAGrB,C","sources":["components/Slides.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Slides = () => {\r\n    var [img, setImg] = useState(\"images/Int01/\")\r\n    var [a, setA] = useState(0);\r\n    var [show, setShow] = useState(false)\r\n    var [count, setCount] = useState(0)\r\n    \r\n    useEffect(() => {        \r\n        const interval = setInterval(()=>{\r\n            setA(a += 1)\r\n            if(a == 175){\r\n                a = 0;\r\n                clearInterval(interval)\r\n                setShow(true);\r\n            }\r\n        }, 20);        \r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    \r\n    const next = () =>{\r\n        a=1\r\n        setCount(count+=1)\r\n        if(count==1){\r\n            const interval1 = setInterval(()=>{                \r\n                setImg(\"images/Int02/\")\r\n                setShow(false);\r\n                setA(a += 1)\r\n                if(a == 196){\r\n                    a = 0;\r\n                    clearInterval(interval1)\r\n                    setShow(true);\r\n                }\r\n            }, 20);        \r\n            return () => clearInterval(interval1);\r\n        }\r\n        if(count==2){\r\n            const interval2 = setInterval(()=>{\r\n                setImg(\"images/Int03/\")\r\n                setShow(false);\r\n                setA(a += 1)\r\n                if(a == 178){\r\n                    a = 0;\r\n                    clearInterval(interval2)\r\n                    setShow(true);\r\n                }\r\n            }, 20);        \r\n            return () => clearInterval(interval2);\r\n        }\r\n        if(count==3){\r\n            const interval3 = setInterval(()=>{\r\n                setImg(\"images/Non_Int_png/\")\r\n                setShow(false);\r\n                setA(a += 1)\r\n                if(a == 249){\r\n                    a = 0;\r\n                    clearInterval(interval3)\r\n                    // setShow(true);\r\n                }\r\n            }, 20);        \r\n            return () => clearInterval(interval3);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            <img src={`${img}${a}.png`} alt=\"emoji\" />\r\n            {show?<button type=\"submit\" className=\"n_btn\" onClick={next}>\r\n                Next {count}\r\n                <span id=\"result\"></span>\r\n            </button>:null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slides;\r\n"],"names":["useState","img","setImg","a","setA","show","setShow","count","setCount","useEffect","interval","setInterval","clearInterval","className","src","alt","type","onClick","interval1","interval2","interval3","id"],"sourceRoot":""}